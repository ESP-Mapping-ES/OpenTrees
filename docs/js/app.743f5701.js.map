{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?797c","webpack:///./src/components/FeatureInfo.vue?fbee","webpack:///./src/components/Wikipedia.vue?a18c","webpack:///./src/App.vue?02e8","webpack:///./src/components/Map.vue?91e8","webpack:///./src/EventBus.js","webpack:///src/components/Map.vue","webpack:///./src/components/Map.vue?72dd","webpack:///./src/components/Map.vue","webpack:///./src/components/FeatureInfo.vue?c99d","webpack:///./src/components/Wikipedia.vue?760e","webpack:///src/components/Wikipedia.vue","webpack:///./src/components/Wikipedia.vue?3bb7","webpack:///./src/components/Wikipedia.vue?7f7a","webpack:///src/components/FeatureInfo.vue","webpack:///./src/components/FeatureInfo.vue?6595","webpack:///./src/components/FeatureInfo.vue?49b4","webpack:///./src/components/Mode.vue?a759","webpack:///src/components/Mode.vue","webpack:///./src/components/Mode.vue?c959","webpack:///./src/components/Mode.vue","webpack:///./src/components/Legend.vue?4bab","webpack:///src/components/Legend.vue","webpack:///./src/components/Legend.vue?c580","webpack:///./src/components/Legend.vue","webpack:///src/App.vue","webpack:///./src/App.vue?5496","webpack:///./src/App.vue?622c","webpack:///./src/main.js","webpack:///./src/components/FeatureInfo.vue?e934"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Wikipedia_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Wikipedia_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_340953e0_lang_pug_render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","src","_v","_s","stats","openTrees","toLocaleString","sources","countries","href","on","click","about","staticRenderFns","Mapvue_type_template_id_5c7495ba_scoped_true_lang_pug_render","Mapvue_type_template_id_5c7495ba_scoped_true_lang_pug_staticRenderFns","EventBus","Vue","console","log","sources_out","Mapvue_type_script_lang_js_flatten","pairs","reduce","arr","_ref","_ref2","slicedToArray","a","b","concat","toConsumableArray","hues","colors","map","h","lab","formatHex","Mapvue_type_script_lang_js_","undefined","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","next","location","hostname","hash","match","mapbox_gl_default","clearStorage","accessToken","Map","container","center","zoom","style","bearingSnap","minPitch","maxPitch","touchZoomRotate","disableRotation","addControl","NavigationControl","dist_default","init","U","loadImage","onLoad","addGeoJSON","type","features","filter","source","bounds","properties","geometry","coordinates","centre","addVector","addCircle","circleColor","circleStrokeColor","circleStrokeWidth","circleRadius","stops","sourceLayer","circleOpacity","Mapvue_type_script_lang_js_stops","visGroups","rarity","reverse","_ref3","_ref4","color","number","circleSortKey","addSymbol","textField","minzoom","textMaxWidth","textSize","textJustify","textRadialOffset","textColor","textVariableAnchor","iconImage","iconSize","iconAllowOverlap","maxzoom","clickLayer","_ref5","flyTo","textHaloColor","textHaloWidth","textFont","textAllowOverlap","switchMode","$emit","getZoom","hoverPointer","visLayers","clickOneLayer","e","f","FeatureInfo","feature","setData","setFilter","scientific","$on","$nextTick","resize","updateLocal","stop","arguments","watch","methods","hide","show","indexOf","setCircleOpacity","setCircleRadius","setCircleColor","localTrees","queryRenderedFeatures","layers","counts","percent","x","Math","round","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","done","tree","_ref6","_ref7","count","common","err","return","topVals","keys_default","sort","local","visType","_ref8","_ref9","none","species","family","health","harm","edible","trunk","label","k","components_Mapvue_type_script_lang_js_","component","componentNormalizer","options","__file","FeatureInfovue_type_template_id_60b99b61_scoped_true_lang_pug_render","description","staticStyle","position","right","top","cursor","close","class","subclass","_e","genus","variety","Number","isFinite","dbh","height","planted","maturity","species_count","_l","prop","ignoreProps","sourceUrl","target","sourceName","searchTerm","_m","FeatureInfovue_type_template_id_60b99b61_scoped_true_lang_pug_staticRenderFns","Wikipediavue_type_template_id_4faa7965_lang_pug_render","directives","rawName","expression","imageUrl","domProps","innerHTML","text","wikiLink","wikiSearchLink","Wikipediavue_type_template_id_4faa7965_lang_pug_staticRenderFns","corsAnywhere","wikiapi","textapi","imageapi","Wikipediavue_type_script_lang_js_","title","loading","props","created","Wikipedia","doSearch","computed","encodeURIComponent","axios_default","then","response","pages","query","page","thumbnail","thumb","replace","devicePixelRatio","extract","components_Wikipediavue_type_script_lang_js_","Wikipedia_component","FeatureInfovue_type_script_lang_js_","firstTime","components","image_url","showExtra","find","info","download","_this2","long","short","_this3","newValue","oldValue","components_FeatureInfovue_type_script_lang_js_","FeatureInfo_component","Modevue_type_template_id_174b2c54_scoped_true_lang_pug_render","$event","open","selectedModeCaption","not-mobile","ref","caption","checked","_q","selectedMode","change","for","Modevue_type_template_id_174b2c54_scoped_true_lang_pug_staticRenderFns","Modevue_type_script_lang_js_","modes","Mode","components_Modevue_type_script_lang_js_","Mode_component","Legendvue_type_template_id_502adf08_scoped_true_lang_pug_render","zoomWarning","vals","background","Legendvue_type_template_id_502adf08_scoped_true_lang_pug_staticRenderFns","Legendvue_type_script_lang_js_","minZooms","Legend","components_Legendvue_type_script_lang_js_","Legend_component","Appvue_type_script_lang_js_","App","src_Appvue_type_script_lang_js_","App_component","config","productionTip","render","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_0_id_60b99b61_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_0_id_60b99b61_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.743f5701.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=1&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex flex-column vh-100 avenir\",attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"bb b--gray bg-green haoeu3-ns\",attrs:{\"id\":\"top\"}},[_c('h1',{staticClass:\"f1-ns f5 ma2-ns lancelot dib fl\"},[_c('img',{staticClass:\"w2-ns w1 dib fl ma2\",attrs:{\"src\":\"cubetree-logo.png\"}}),_c('span',{staticClass:\"dark-green\"},[_vm._v(\"OpenTrees.org\")]),_c('span',{staticClass:\"dark-gray ml2 ml4-ns f3-ns\"},[_vm._v(_vm._s(_vm.stats.openTrees.toLocaleString())+\" open data trees from \"+_vm._s(_vm.stats.sources)+\" sources in \"+_vm._s(_vm.stats.countries.length)+\" countries.\")])])]),_c('div',{staticClass:\"flex flex-auto\",attrs:{\"id\":\"middle\"}},[_c('div',{staticClass:\"br b--gray overflow-y-scroll overflow-x-hidden\",attrs:{\"id\":\"sidebar\"}},[_c('FeatureInfo')],1),_c('div',{staticClass:\"relative flex-auto\",attrs:{\"id\":\"map-container\"}},[_c('Map'),_c('div',{staticClass:\"absolute ba b--gray shadow-3 ml2-ns mt2-ns mw5 mw-none-ns overflow-y-scroll\",attrs:{\"id\":\"overlay\"}},[_c('Mode'),_c('Legend')],1)],1)]),_c('div',{staticClass:\"bt b--light-gray flex-none pa1 shadow-3\",attrs:{\"id\":\"bottom\"}},[_vm._v(\"Created by \"),_c('a',{attrs:{\"href\":\"https://twitter.com/stevage1/\"}},[_vm._v(\"Steve Bennett\")]),_vm._v(\". \"),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":_vm.about}},[_vm._v(\"About OpenTrees.org\")]),_vm._v(\".\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"absolute absolute--fill\",attrs:{\"id\":\"map\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nexport const EventBus = new Vue();","<template lang=\"pug\">\n#map.absolute.absolute--fill\n</template>\n\n<script>\nimport mapboxgl from 'mapbox-gl';\nimport U from 'mapbox-gl-utils';\nimport { EventBus } from '../EventBus';\nimport sources from '../sources-out.json';\nconsole.log(sources);\n\nconst flatten = pairs => pairs.reduce(((arr, [a, b]) => [...arr, a, b]), []);\nimport * as d3Color from 'd3-color';\nconst hues = [0, 30, 60, 90, 150, 180, 210, 250, 280, 320]\nconst colors = [...hues.map(h => d3Color.hcl(h,100,60).formatHex()), ...hues.map(h => d3Color.hcl(h,40,40).formatHex())];\n\nexport default {\n    data: () => ({\n        mode: undefined\n    }),\n    async mounted() {\n        if (window.location.hostname === 'localhost' || window.location.hash.match(/clear/)) {\n            mapboxgl.clearStorage();\n        }\n        mapboxgl.accessToken = 'pk.eyJ1Ijoic3RldmFnZSIsImEiOiJjazZzd3V2dXEwNGZlM2xtZzFnOXdkOTFtIn0.pKVxwqE61gNc7PKK5u1j6g';\n        const map = new mapboxgl.Map({\n            container: 'map',\n            center: [144.96, -37.81],\n            zoom: 14,\n            style: 'mapbox://styles/stevage/ck6sws4g704uu1iqtvn25gj6v',\n            // style: 'mapbox://stevage/cjxeaxkqi0i2v1cqq1qrnws8c', // satellite\n            hash: 'pos',\n            bearingSnap: 360,\n            // dragRotate: false,\n            minPitch: 0,\n            maxPitch: 0,\n\n        });\n        map.touchZoomRotate.disableRotation();\n        map.addControl(new mapboxgl.NavigationControl());\n        U.init(map, mapboxgl);\n        window.map = map;\n        window.app.Map = this;\n        this.map = map;\n        map.U.loadImage('tree', 'cubetree-favicon.png');\n        map.U.onLoad(() => {\n            map.U.addGeoJSON('sources', {\n                type: 'FeatureCollection',\n                features: sources\n                .filter(source => source.bounds)\n                .map(source => ({\n                    type: 'Feature',\n                    properties: source,\n                    geometry: {\n                        type: 'Point',\n                        coordinates: source.centre || [(source.bounds[0] + source.bounds[2]) / 2, (source.bounds[1] + source.bounds[3]) / 2]\n                    }\n                }))\n            });\n\n            map.U.addVector('trees', window.location.hostname === 'localhost' ? 'http://localhost:4011/index.json' : 'mapbox://stevage.9slh6b3l');\n            map.U.addGeoJSON('selected-tree');\n            map.U.addCircle('trees-selected', 'selected-tree', {\n                circleColor: 'transparent',\n                // circleStrokeColor: ['case', ['to-boolean', ['feature-state', 'selected']], 'red', 'transparent'],\n                circleStrokeColor: 'hsla(100,60%,40%,0.8)',\n                circleStrokeWidth: 3,\n                circleRadius: { stops: [[10,8], [12, 16]] },\n                \n                \n            });\n            map.U.addCircle('trees-similar', 'trees', {\n                sourceLayer: 'trees',\n                circleColor:'transparent',\n                circleStrokeWidth:1,\n                circleStrokeColor: 'hsla(100,50%,60%,0.8)',\n                circleRadius: { stops: [[12, 6], [17, 10]] },\n                filter:false\n            });\n            map.U.addCircle('trees-vis-none', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(80,50%,60%,0.6)',\n                circleRadius: { stops: [[10,4], [12, 6], [16, 8], [20, 18]] },\n                circleOpacity:0.5\n            });\n            map.U.addCircle('trees-vis-species', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: ['case', ...stops('species'), 'hsla(0,0%,0%,0.3)'],\n                circleRadius: { stops: [[10, 1], [12, 2], [17, 6], [ 20, 18], ] },\n                circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-family', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: ['case', ...stops('family'), 'hsla(0,0%,0%,0.3)'],\n                circleRadius: { stops: [[12, 2], [17, 6]] },\n                circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n\n            map.U.addCircle('trees-vis-rarity', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[12, 2], [17, 6], [20, 18]] },\n                // circleColor: ['case', ...flatten(visGroups.rarity.map(([name, color, filter]) => [filter, color])), '#ddd'],\n                circleColor: ['interpolate', ['linear'], ['to-number', ['get', 'species_count']], \n                    ...flatten(visGroups.rarity.reverse().map(([name, color, number]) => [number, color])),\n                     ],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1],\n                circleSortKey: ['-', ['get', 'species_count']]\n            });\n            map.U.addCircle('trees-vis-health', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[10, 1], [12, 2], [17, 6], [20, 18]] },\n                circleColor: ['match', ['get', 'health'], ...stops('health'), 'hsla(260,80%,50%,0.7)'],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-edible', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[10, 1], [12, 2], [17, 6], [20, 18]] },\n                circleColor: ['case', ...stops('edible'), 'transparent',/*'hsla(100,80%,20%,0.02)'*/],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-harm', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[12, 2], [17, 6],[20, 18]] },\n                circleColor: ['case', ...stops('harm'), 'transparent'],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-local', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(80,50%,70%,0.9)',\n                circleRadius: { stops: [[10,2], [12, 3],[16,5], [20, 14]] },\n                circleOpacity:0.9\n            });\n            map.U.addCircle('trees-vis-trunk', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(40,90%,20%,0.8)',\n                circleRadius: ['interpolate', ['exponential', 1], ['to-number', ['get', 'dbh'], 0],\n                    0, 0,\n                    1, 1,\n                    50, 10,\n                    250, 20\n                ],\n                circleOpacity:0.5\n            });\n            map.U.addCircle('trees-inner', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(80,50%,20%,0.9)',\n                circleRadius: { stops: [[9,0.5],[11,1], [14, 2]] },\n\n                    \n            });\n            map.U.addSymbol('trees-vis-label', 'trees', {\n                sourceLayer: 'trees',\n                textField: ['coalesce', ['get', 'common'], ['get', 'scientific'], ''],\n                minzoom: 16,\n                textMaxWidth: 3,\n                textSize: ['interpolate',['exponential', 1.5], ['zoom'],15, 8,19,10],\n                textJustify: 'auto',\n                textRadialOffset:0.25,\n                textColor:'hsl(110,50%,15%)',\n                textVariableAnchor:['left','right','bottom-left','top-left','top-right','bottom-right','bottom','top']\n            });\n\n            map.U.addSymbol('sources-icons', 'sources', {\n                iconImage: 'tree',\n                iconSize:0.3,\n                iconAllowOverlap: true,\n                // circleColor:'hsl(100,30%,30%)',\n                // circleRadius:['interpolate', ['linear'], ['zoom'], 3, 5, 5, 10],\n                // circleStrokeWidth:3,\n                // circleStrokeColor:'hsl(100,30%,50%)',\n                // circleOpacity: ['interpolate',['linear'],['zoom'],5,1,7,0],\n                maxzoom: 8\n            });\n            // map.U.addCircle('sources-circles', 'sources', {e\n            //     circleColor:'hsl(100,30%,30%)',\n            //     circleRadius:['interpolate', ['linear'], ['zoom'], 3, 5, 5, 10],\n            //     circleStrokeWidth:3,\n            //     circleStrokeColor:'hsl(100,30%,50%)',\n            //     circleOpacity: ['interpolate',['linear'],['zoom'],5,1,7,0],\n            //     maxzoom: 8\n            // });\n            map.U.clickLayer('sources-icons', ({ features }) => {\n                console.log(features[0].geometry)\n                map.flyTo({\n                    center: features[0].geometry.coordinates,\n                    zoom: 11\n                });\n                \n            });\n            map.U.addSymbol('sources-labels', 'sources', {\n                textField: ['coalesce', ['get','short'], ['get','id']],\n                textHaloColor: 'hsla(100,30%,95%,0.9)',\n                textColor:'hsl(100,30%,10%)',\n                textHaloWidth: 2,\n                textFont: ['Lancelot Regular','Arial Unicode MS Regular'],\n                textAllowOverlap: true,\n                maxzoom:10,  \n                minzoom: 8\n            });\n\n            map.U.addSymbol('sources-labels-low', 'sources', {\n                textField: ['coalesce', ['get','short'], ['get','id']],\n                textHaloColor: 'hsla(100,30%,95%,0.9)',\n                textColor:'hsl(100,30%,10%)',\n                textHaloWidth: 2,\n                textFont: ['Lancelot Regular','Arial Unicode MS Regular'],\n                textVariableAnchor:['center','bottom','left','bottom-left','top-left','right','top-right','bottom-right',],\n                textRadialOffset: 2,\n                textAllowOverlap: false,\n                maxzoom:8,  \n                minzoom: 4\n            });\n\n            this.switchMode('none');\n            map.on('zoom', () => EventBus.$emit('zoom-change', map.getZoom()));\n                \n        });\n        \n        map.U.hoverPointer(['trees-inner', ...visLayers]);\n        // let selectedId;\n        map.U.clickOneLayer(['trees-inner', ...visLayers], e => {\n            if (map.getZoom() < 7) {\n                return;\n            }\n            console.log(e);\n            // if (selectedId) {\n            //     map.setFeatureState({ source: 'trees', sourceLayer: 'trees', id: selectedId }, { selected: false });\n            // }\n            const f = e.features[0];\n            window.app.FeatureInfo.feature = f;\n            map.U.setData('selected-tree', f);\n            map.U.setFilter('trees-similar', f.properties.scientific ? ['==', ['get', 'scientific'], f.properties.scientific] : false);\n            // selectedId = e.features[0].id;\n            // map.setFeatureState({ source: 'trees', sourceLayer: 'trees', id: selectedId }, { selected: true });\n\n        }, () => {\n            map.U.setData('selected-tree', {type:'FeatureCollection',features:[]})\n            map.U.setFilter('trees-similar', false);\n            EventBus.$emit('unselect-tree');\n        });\n        EventBus.$on('vis-mode', mode => this.$nextTick(() => this.mode = mode))\n        EventBus.$on('resize', () => this.$nextTick(() => this.map.resize()));\n        map.on('moveend', () => {\n            if (this.mode === 'local') {\n                this.updateLocal();\n            }\n        });\n    },\n    watch: {\n        mode() {\n            this.switchMode(this.mode);\n        }\n    },\n    methods: {\n        switchMode(mode) {\n            this.map.U.hide(visLayers);\n            this.map.U.show(`trees-vis-${mode}`);\n            console.log(mode);\n            if (['none','label'].indexOf(mode) >= 0) {\n                this.map.U.setCircleOpacity('trees-inner', 1);\n                this.map.U.setCircleRadius('trees-inner', { stops: [[9,1],[14, 2]] });\n\n            } else {\n                this.map.U.setCircleOpacity('trees-inner', { stops: [[14, 0], [15, 1]] });\n                this.map.U.setCircleRadius('trees-inner', { stops: [[9,0.5],[11,1], [14, 2]] });\n\n            }\n            if (mode === 'label') {\n                this.map.U.show('trees-vis-none');\n            }\n\n            if (mode === 'local') {\n                this.updateLocal();\n                return; // it also does the legend update\n            }\n            EventBus.$emit('update-legend', visGroups[mode]);\n        },\n        updateLocal() {\n            // const colors = ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'];            \n            // const hues = [0, 30, 60, 90, 150, 180, 210, 250, 280, 320]\n            // const colors = [...hues.map(h => d3Color.hcl(h,100,60).formatHsl()), ...hues.map(h => d3Color.hcl(h,40,40).formatHsl())];\n            if (this.map.getZoom() < 12) {\n                this.map.U.setCircleColor('trees-vis-local', 'green');\n                return;\n            }\n\n            const localTrees = this.map.queryRenderedFeatures({ layers: ['trees-inner'] });\n            const counts = {};\n            const percent = x => Math.round(x * 100) / 1 + '%';\n            for (const tree of localTrees) {\n                if (tree.properties.scientific) {\n                    let [count, common] = (counts[tree.properties.scientific] || [0, ''])\n                    counts[tree.properties.scientific] = [count + 1, common || tree.properties.common]\n                }\n            }\n            console.log(counts)\n            const topVals = Object.keys(counts).sort((a, b) => counts[b][0] - counts[a][0]).slice(0,colors.length);\n            visGroups.local = topVals.map((scientific, i) => [\n                `${percent(counts[scientific][0] / localTrees.length)}: ${scientific}${counts[scientific][1] ? `<br/> <span class=\"f7\">${counts[scientific][1]}</>` : ''}`, \n                colors[i], ['==', ['get', 'scientific'], \n                scientific\n            ]]);\n            console.log(visGroups.local);\n            this.map.U.setCircleColor('trees-vis-local', visGroups.local.length ? ['case', ...stops('local'), 'transparent'] : 'transparent');\n            EventBus.$emit('update-legend', [...visGroups.local, ['Other', 'transparent']]);\n        }\n    }\n}\nconst stops = visType => flatten(visGroups[visType].map(([name, color, stop]) => [stop, color]));\n\nconst visGroups = {\n    none: [],\n    species: [\n        ['Eucalyptus', \"hsl(90,90%,30%)\", ['in', ['get', 'genus'], ['literal', ['Eucalyptus']]]], \n        ['Corymbia,  Angophora', \"hsl(90,30%,60%)\", ['in', ['get', 'genus'], ['literal', ['Corymbia', 'Angophora']]]], \n        ['Lophostemon', \"hsl(90,90%,60%)\", ['in', ['get', 'genus'], ['literal', ['Lophostemon']]]], \n        ['Grevilleas, proteas, banksias', 'hsl(120,60%,50%)', ['in', ['get', 'genus'], ['literal', ['Grevillea', 'Grevillia', 'Banksia', 'Stenocarpus']]]], \n        ['Melaleucas and callistemons', 'hsl(200, 60%,50%)', ['in', ['get', 'genus'], ['literal', ['Melaleuca', 'Callistemon']]]], \n        ['(Allo)Casuarinas', 'hsl(180, 90%,60%)', ['in', ['get', 'genus'], ['literal', ['Casuarina', 'Allocasuarina']]]], \n        ['Other natives', 'hsl(160, 90%, 30%)', \n            ['any', \n                ['in', ['get', 'genus'], ['literal', \n                    ['Hakea', 'Agonis', 'Tristaniopsis', 'Lagunaria', 'Acacia','Hymenosporum', 'Brachychiton', 'Leptospermum' /* some aren't endemic */, 'Waterhousea' /* a bit uncertain */, \n                        'Bursaria', 'Geijera', 'Paraserianthes', 'Myoporum','Exocarpos','Exocarpus', 'Jacksonia',\n                        'Agathis' /* well only Robusta, atropurpurea, microstachya */]]],\n                ['all', \n                    ['in', ['get', 'genus'], ['literal', ['Acmena', 'Syzygium']]], \n                    ['in', ['get', 'species'], ['literal', ['smithii']]]],\n                ['in', ['get', 'scientific'], ['literal', [\n                    'Pittosporum undulatum', \n                    'Cupaniopsis anacardioides', \n                    'Acmena smithii', \n                    'Acmena smithii (Syzygium smithii)',\n                    'Melia azedarach',\n                    'Syzygium australe']]]]], \n        ['Planes', 'hsl(0,86%,60%)', ['in', ['get', 'genus'], ['literal', ['Platanus', 'Plantanus']]]], \n        ['Elms','hsl(30,60%,60%)', ['in', ['get', 'genus'], ['literal', ['Ulmus', 'Celtis']]]], \n        ['Oaks & maples', 'hsl(345, 60%,30%)', ['in', ['get', 'genus'], ['literal', ['Quercus', 'Acer']]]], \n        ['Palms', 'hsl(40, 100%,70%)', ['in', ['get', 'genus'], ['literal', ['Phoenix', 'Washingtonia', 'Jubaea', 'Chamaerops','Syagrus','Livistona','Trachycarpus']]]], \n        ['Conifers', 'hsl(60,90%,45%)', ['in', ['get', 'genus'], ['literal', ['Pinus', 'Araucaria', 'Cupressus', 'Cupressocyparis', 'Podocarpus', 'Platycladus', 'Thuja', 'Hesperocyparis', \n                'Callitris', 'Cedrus', 'Picea' /* spruce */, 'Abies','Cunninghamia','Chamaecyparis','Sequoiadendron', 'Sequoia','Thujopsis','Taxus', 'Lepidopthamnus',]]]], \n        ['Pears, plums and other fruits', 'hsl(250,60%,60%)', ['in', ['get', 'genus'], ['literal', ['Pyrus', 'Prunus', 'Malus', 'Citrus', 'Mangifera']]]], \n        ['Figs, olives', 'hsl(0,0%,40%)', ['in', ['get', 'genus'], ['literal', ['Ficus', 'Olea']]]], \n        ['Ashes', 'hsl(0,0%,20%)', ['in', ['get', 'genus'], ['literal', ['Fraxinus']]]], \n        ['Other exotics', 'hsl(310, 90%,60%)', ['any', \n            ['in', ['get', 'genus'], ['literal', ['Betula', 'Liquidambar', 'Gleditsia', 'Robinia','Pseudotsuga','Alnus', 'Laburnum',\n                'Eriobotrya','Olea', 'Schinus', 'Photinia', 'Laurus', 'Populus', 'Ligustrum', 'Cotoneaster', 'Nerium', 'Pyracantha', 'Zelkova', 'Jacaranda', 'Metrosideros',\n                'Pistacia','Pistachia','Arbutus','Crataegus','Koelreuteria', 'Morus','Cinnamomum' /* a small number of natives */, 'Virgilia', 'Salix', 'Ceratonia', \n                'Cercis','Tilia','Ginkgo','Magnolia','Melia','Afrocarpus', 'Michelia','Sophora' /* maybe */, 'Carpinus','Fagus','Sorbus','Liriodendron','Ilex','Aesculus',\n                'Viburnum', 'Genista']]], \n            ['in', ['get', 'species'], ['literal', ['indica', 'eugenioides', 'japonicus', 'japonica']]],\n            ['in', ['get', 'scientific'], ['literal', ['Agathis robusta', 'Pittosporum tenuifolium', 'Agathis australis','Cordyline australis', 'Hibiscus syriacus']]]]], \n    ],\n    family: [\n        ['Unknown', 'hsla(0, 0%, 0%, 0.3)', ['==', ['coalesce', ['get', 'family'], ''], '']],\n        ['Myrtaceae', colors[0], ['==', ['get','family'], 'Myrtaceae']],\n        ['Fabaceae', colors[1], ['==', ['get','family'], 'Fabaceae']],\n        ['Rosaceae', colors[2], ['==', ['get','family'], 'Rosaceae']],\n        ['Casuarinaceae', colors[3], ['==', ['get','family'], 'Casuarinaceae']],\n        ['Ulmaceae', colors[4], ['==', ['get','family'], 'Ulmaceae']],\n        ['Proteaceae', colors[5], ['==', ['get','family'], 'Proteaceae']],\n        ['Oleaceae', colors[6], ['==', ['get','family'], 'Oleaceae']],\n        ['Fagaceae', colors[7], ['==', ['get','family'], 'Fagaceae']],\n        ['Meliaceae', colors[8], ['==', ['get','family'], 'Meliaceae']],\n        ['Pittosporaceae', colors[9], ['==', ['get','family'], 'Pittosporaceae']],\n        ['Bignoniaceae', colors[10], ['==', ['get','family'], 'Bignoniaceae']],\n        ['Pinaceae', colors[11], ['==', ['get','family'], 'Pinaceae']],\n        ['Malvaceae', colors[12], ['==', ['get','family'], 'Malvaceae']],\n        ['Anacardiaceae', colors[13], ['==', ['get','family'], 'Anacardiaceae']],\n        ['Arecaceae', colors[14], ['==', ['get','family'], 'Arecaceae']],\n        ['Lythraceae', colors[15], ['==', ['get','family'], 'Lythraceae']],\n        ['Sapindaceae', colors[16], ['==', ['get','family'], 'Sapindaceae']],\n        ['Betulaceae', colors[17], ['==', ['get','family'], 'Betulaceae']],\n        ['Cupressaceae', colors[18], ['==', ['get','family'], 'Cupressaceae']],\n        ['Araucariaceae', colors[19], ['==', ['get','family'], 'Araucariaceae']],\n    ],\n\n    rarity: [\n        ['Super common', 'hsla(210, 90%,60%, 0.5)', 10000],\n        ['Very common', 'hsla(160, 90%,60%, 0.6)', 1000],\n        ['Common', 'hsla(120, 80%,60%, 0.7)', 100],\n        ['Average', 'hsla(60, 80%,50%, 0.8)', 20],\n        ['Rare', 'hsla(30, 80%, 50%, 0.9)', 5],\n        ['Very rare', 'hsla(0, 100%, 40%, 1)', 1],\n        ['Unknown', 'hsla(0, 0%, 0%, 0.3)', 0],\n\n    ],\n    health: [\n\n        ['Good', 'hsla(120, 80%,50%, 0.8)', ['Good', 'Excellent', 'good', 'excellent']],\n        ['Fair', 'hsla(50, 100%, 50%, 0.9)', ['Fair','fair']],\n        ['Poor', 'hsla(20, 100%, 40%, 1)', ['Poor','poor', 'Dying','dying']],\n        ['Dead', 'hsla(330, 30%,20%, 0.8)', ['Dead','dead','Stump','stump']],\n        ['Unknown', 'hsla(260,80%,50%,0.7)', ['Unknown']],\n    ],\n    harm: [\n\n        ['Odour', 'hsl(240, 90%,60%)', ['in', ['get', 'scientific'], ['literal', ['Pyrus calleryana']]]],\n        ['Allergy', 'hsl(10, 90%,60%)', ['in', ['get', 'scientific'], ['literal', ['Platanus x acerifolia', 'Platanus acerifolia']]]],\n        ['Skin irritation', 'hsl(60, 90%,40%)', ['in', ['get', 'genus'], ['literal', ['Lagunaria']]]],\n        ['Poisonous', 'hsl(300, 90%,50%)', ['any',\n            ['in', ['get', 'genus'], ['literal', ['Nerium']]],\n            ['in', ['get', 'scientific'], ['literal', ['Melia azedarach']]]]],\n\n        ['Poisonous for dogs', 'hsl(300, 30%,40%)', ['any',\n            ['in', ['get', 'scientific'], ['literal', ['Prunus serrulata', 'Cotoneaster glaucophylla']]],\n            ['in', ['get', 'species'], ['literal', 'pseudoacacia']]],\n            ['in', ['get', 'genus'], ['literal', ['Quercus']]]\n        ],\n    ],\n    edible: [\n        ['Apple/crabapple', 'hsl(0,80%,30%)', ['==', ['get', 'genus'], 'Malus']],\n        ['Cherry plum', 'hsl(280,80%,30%)', ['all', ['==', ['get', 'genus'], 'Prunus'], ['==', ['get', 'species'], 'cerasifera']]],\n        ['Peach', 'hsl(30,100%,60%)', ['all', ['==', ['get', 'genus'], 'Prunus'], ['==', ['get', 'species'], 'persica']]],\n        ['Cherry', 'hsl(330,80%,30%)', ['all', ['==', ['get', 'genus'], 'Prunus'], ['==', ['get', 'species'], 'avium']]], // cerasus...\n        // ['Stone fruit', 'blue', ['==', ['get', 'genus'], 'Prunus']],\n        ['Citrus', 'yellow', ['==',['get', 'genus'], 'Citrus']],\n        ['Mango','hsl(50,80%,40%)', ['==',['get','genus'], 'Mangifera']],\n        ['Fig', 'hsl(100,90%,40%)', ['all', ['==', ['get', 'genus'], 'Ficus'], ['==', ['get', 'species'], 'carica']]], // maybe others too\n        ['Quandong', 'hsl(340,95%,46%)', ['all', ['==', ['get', 'genus'], 'Santalum'], ['==', ['get', 'species'], 'acuminatum']]], \n        ['Loquat', 'hsl(150,95%,46%)', ['all', ['==', ['get', 'genus'], 'Eriobotrya'], ['==', ['get', 'species'], 'japonica']]], \n\n        \n\n    ],\n    trunk: [],\n    label: [],\n    local: [] // populated dynamically\n}\nconst visLayers = Object.keys(visGroups).map(k => `trees-vis-${k}`);\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=5c7495ba&scoped=true&lang=pug&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c7495ba\",\n  null\n  \n)\n\ncomponent.options.__file = \"Map.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.feature)?_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"bg-green\"},[_c('h2',{staticClass:\"i lancelot f3 pa2 mv0 bg-green\"},[_vm._v(_vm._s(_vm.p.common || _vm.p.scientific || _vm.p.description))]),_c('i',{staticClass:\"close-btn pa2 mt1 dark-green pointer fw6 fas fa-times\",staticStyle:{\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\",\"cursor\":\"pointer\"},on:{\"click\":_vm.close}})]),(_vm.p.class)?_c('div',{staticClass:\"cl f7 pa2 i\"},[_vm._v(_vm._s(_vm.p.class)+\" \"),_c('span',{staticClass:\"light-green\"},[_vm._v(\"> \")]),_vm._v(_vm._s(_vm.p.subclass)+\" \"),_c('span',{staticClass:\"light-green\"},[_vm._v(\"> \")]),_vm._v(_vm._s(_vm.p.family))]):_vm._e(),(_vm.feature)?_c('table',{staticClass:\"bg-white helvetica ma1\",attrs:{\"id\":\"FeatureInfo\"}},[(_vm.p.scientific)?_c('tr',[_c('th',[_vm._v(\"Scientific name\")]),_c('td',[_vm._v(_vm._s(_vm.p.scientific))])]):_vm._e(),(_vm.showExtra)?[(_vm.p.genus)?_c('tr',[_c('th',[_vm._v(\"Genus/species\")]),_c('td',[_vm._v(_vm._s(_vm.p.genus)+\" \"+_vm._s(_vm.p.species))])]):_vm._e()]:_vm._e(),(_vm.p.common)?_c('tr',[_c('th',[_vm._v(\"Common name\")]),_c('td',[_vm._v(_vm._s(_vm.p.common))])]):_vm._e(),(!_vm.p.common && !_vm.p.scientific)?_c('tr',[_c('td',[_vm._v(\"No species information available.\")])]):_vm._e(),(_vm.p.description)?_c('tr',[_c('th',[_vm._v(\"Description\")]),_c('td',[_vm._v(_vm._s(_vm.p.description))])]):_vm._e(),(_vm.p.variety)?_c('tr',[_c('th',[_vm._v(\"Variety\")]),_c('td',[_vm._v(_vm._s(_vm.p.variety))])]):_vm._e(),(Number.isFinite(Number(_vm.p.dbh)))?_c('tr',[_c('th',[_vm._v(\"Diameter\")]),_c('td',[_vm._v(_vm._s(Math.round(_vm.p.dbh))+\" \"),_c('span',{staticClass:\"detail\"},[_vm._v(\"cm.\")])])]):_vm._e(),(_vm.p.height)?_c('tr',[_c('th',[_vm._v(\"Height\")]),_c('td',[_vm._v(_vm._s(_vm.p.height)+\" \"),_c('span',{staticClass:\"detail\"},[_vm._v(\"m.\")])])]):_vm._e(),(_vm.p.planted)?_c('tr',[_c('th',[_vm._v(\"Planted\")]),_c('td',[_vm._v(_vm._s(_vm.p.planted))])]):_vm._e(),(_vm.p.maturity)?_c('tr',[_c('th',[_vm._v(\"Maturity\")]),_c('td',[_vm._v(_vm._s(_vm.p.maturity))])]):_vm._e(),(_vm.p.species_count)?_c('tr',[_c('th',[_vm._v(\"Count\")]),_c('td',[_vm._v(_vm._s(_vm.p.species_count.toLocaleString())+\" \"),_c('span',{staticClass:\"detail\"},[_vm._v(\"similar trees\")])])]):_vm._e(),(_vm.p.ref)?_c('tr',[_c('th',[_vm._v(\"ID\")]),_c('td',[_vm._v(_vm._s((\"#\" + (_vm.p.ref))))])]):_vm._e(),(_vm.showExtra)?_vm._l((_vm.p),function(value,prop){return _c('tr',[(_vm.ignoreProps.indexOf(prop) === -1)?[_c('th',{staticClass:\"f6 dark-green\"},[_vm._v(_vm._s(prop))]),_c('td',{staticClass:\"f6\"},[_vm._v(_vm._s(value))])]:_vm._e()],2)}):_vm._e()],2):_vm._e(),_c('p',{staticClass:\"f7 gray mh2 i mv0\"},[_vm._v(\"Source: \"),_c('a',{attrs:{\"href\":_vm.sourceUrl,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.sourceName))])]),_c('p',{staticClass:\"f7 mh2 gray i mv0\"},[_vm._v(\"See on \"),_c('a',{attrs:{\"href\":(\"https://www.google.com/maps/@?api=1&map_action=pano&viewpoint=\" + (_vm.feature.geometry.coordinates.slice().reverse())),\"target\":\"_blank\"}},[_vm._v(\"StreetView\")]),_vm._v(\".\")]),_c('Wikipedia',{attrs:{\"searchTerm\":_vm.p.genus + (_vm.p.species ? ' ' + _vm.p.species : '')}})],1):_vm._e(),(!_vm.feature && _vm.about)?_c('div',{staticClass:\"panel pa2\"},[_c('i',{staticClass:\"close-btn pa2 mt1 dark-green pointer fw6 fas fa-times\",staticStyle:{\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\",\"cursor\":\"pointer\"},on:{\"click\":_vm.close}}),_vm._m(0),_vm._m(1),_c('div',{staticClass:\"i b dark-green\"},[_vm._v(\"Click any tree to learn about it.\")]),_c('p'),_c('h4',[_vm._v(\"Why does this data exist?\")]),_c('p',[_vm._v(\"Local governments collect tree data for several reasons:\")]),_vm._m(2),_c('h4',[_vm._v(\"There's a tree missing!\")]),_vm._m(3),_c('h4',[_vm._v(\"Why are all the trees showing as grey in some areas?\")]),_c('p',[_vm._v(\"Some of the data sources don't include species information. This can happen when either it isn't collected or isn't included in the data export for some reason.\")]),_c('h4',[_vm._v(\"Family information is incomplete\")]),_c('p',[_vm._v(\"The source I'm using only covers Australian species. I'll need to do something about that.\")]),_vm._m(4),_vm._m(5),_c('h4',[_vm._v(\"Is there a way for me to help maintain the tree data in my area?\")]),_vm._m(6),_vm._v(\"or outsourced to a specialist arborist company. However it would be possible to start a project on \"),_c('a',{attrs:{\"href\":\"https://www.inaturalist.org/\"}},[_vm._v(\"inaturalist.org\")]),_vm._v(\" and import that data, for instance.\"),_c('h4',[_vm._v(\"How did you build it?\")]),_vm._m(7),_vm._m(8),_c('p',[_vm._v(\"In 2020, I rewrote it again using VueJS. (No blog post yet!)\")]),_c('h4',[_vm._v(\"Where is the source code?\")]),_vm._m(9),_c('h4',[_vm._v(\"Who made this?\")]),_vm._m(10)]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_vm._v(\"About \"),_c('span',{staticClass:\"lancelot dark-green f3\"},[_vm._v(\"OpenTrees.org\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('span',{staticClass:\"lancelot dark-green f4\"},[_vm._v(\"OpenTrees.org \")]),_vm._v(\"is the world's largest database of municipal street and park trees, produced by harvesting open data from dozens of different sources.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"To guide their choices of what to plant next.\")]),_c('li',[_vm._v(\"To manage risk of branches falling.\")]),_c('li',[_vm._v(\"To manage pruning, watering and inspection schedules.\")]),_c('li',[_vm._v(\"To plan ahead, so lots of old trees don't die at the same time.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Every tree database is incomplete and out of date. A source might be missing a tree because:\"),_c('ul',[_c('li',[_vm._v(\"It only covers \\\"significant trees\\\".\")]),_c('li',[_vm._v(\"It only includes trees directly managed by the government body, not private properties, schools etc.\")]),_c('li',[_vm._v(\"It only covers parks, or streets.\")]),_c('li',[_vm._v(\"The tree was surveyed once, a long time ago, and the data isn't maintained.\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_vm._v(\"How do I get my city on \"),_c('span',{staticClass:\"lancelot dark-green f4\"},[_vm._v(\"OpenTrees.org\")]),_vm._v(\"?\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Find out if your city even has a tree database.\")]),_c('li',[_vm._v(\"Find out if it is published as open data. If not, try to convince them to do so.\")]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/stevage/opentrees/issues\"}},[_vm._v(\"Raise an issue\")]),_vm._v(\" to include it \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"A couple of the tree databases appear to be crowdsourced, such as \"),_c('a',{attrs:{\"href\":\"https://www.portlandoregon.gov/parks/53181\"}},[_vm._v(\"Portland, Oregon\")]),_vm._v(\". Most are maintained either directly by government employees, \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('a',{attrs:{\"href\":\"https://stevebennett.me/2015/04/07/opentrees-org-how-to-aggregate-373000-trees-from-9-open-data-sources/\"}},[_vm._v(\"In 2015\")]),_vm._v(\", it used Postgres and TileMill.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('a',{attrs:{\"href\":\"https://stevebennett.me/2018/05/15/you-might-not-need-postgis-streamlined-vector-tile-processing-for-big-map-visualisations/\"}},[_vm._v(\"In 2018\")]),_vm._v(\", I rewrote it using Mapbox-GL-JS and no database. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"On \"),_c('a',{attrs:{\"href\":\"https://github.com/stevage/opentrees\"}},[_vm._v(\"Github\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Me, Steve Bennett, a freelance web developer, data visualisation and Mapbox expert based in Melbourne, Australia. You can see the rest of my portfolio at \"),_c('a',{attrs:{\"href\":\"https://hire.stevebennett.me\"}},[_vm._v(\"hire.stevebennett.me\")]),_vm._v(\".\")])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchTerm),expression:\"searchTerm\"}],staticClass:\"pa2\",attrs:{\"id\":\"Wikipedia\"}},[(_vm.text)?_c('div',[_c('img',{attrs:{\"src\":_vm.imageUrl}}),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.text)}}),_c('p',[_c('small',[_vm._v(\"Read more on \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.wikiLink}},[_vm._v(\"Wikipedia\")])])])]):(_vm.loading)?_c('div',[_c('p',{staticClass:\"i\"},[_vm._v(\"Looking up Wikipedia...\")])]):_c('div',[_c('p',[_vm._v(\"Nothing found on \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.wikiSearchLink}},[_vm._v(\"Wikipedia\")]),_vm._v(\".\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Wikipedia.pa2(v-show=\"searchTerm\")\n    div(v-if=\"text\")\n        img(:src=\"imageUrl\")\n        p(v-html=\"text\")\n        p <small>Read more on <a target=\"_blank\" :href=\"wikiLink\"\">Wikipedia</a></small>\n    div(v-else-if=\"loading\")\n        p.i Looking up Wikipedia...\n    div(v-else)\n        //- | Nothing on <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Special:Search/' + encodeURIComponent(this.searchTerm) + '\">Wikipedia</a>.';\n        p Nothing found on <a target=\"_blank\" :href=\"wikiSearchLink\">Wikipedia</a>.\n</template>\n\n<script>\nimport axios from 'axios';\nconst corsAnywhere = 'https://cors-anywhere.herokuapp.com/';\nconst wikiapi = corsAnywhere + 'http://en.wikipedia.org/w/api.php?action=query&format=json';\nconst textapi = wikiapi + '&prop=extracts&redirects&titles=';\nconst imageapi = wikiapi + '&prop=pageimages&redirects&titles=';\n\nexport default {\n    name: \"Wikipedia\",\n    data: () => ({\n        imageUrl: undefined,\n        text:undefined,\n        title: undefined,\n        loading: false\n    }),\n    props: ['searchTerm'],\n    created() {\n        window.Wikipedia = this;\n    },\n    mounted () {\n        this.doSearch();\n    },\n    computed: {\n        wikiLink() {\n            return `http://en.wikipedia.org/wiki/${encodeURIComponent(this.title)}`;\n        },\n        wikiSearchLink() {\n            return `https://en.wikipedia.org/w/index.php?search=${this.searchTerm}`;\n            // return `http://en.wikipedia.org/wiki/${encodeURIComponent(this.searchTerm)}`;\n            \n        }\n    },\n    methods: {\n        doSearch() {\n            this.text = undefined;\n            this.title = undefined;\n            this.imageUrl = undefined;\n            this.loading = true;\n\n            // Bring this back - concerned about reactive cascades\n            // if (this.searchTerm === 'acer') {\n            //     this.searchTerm = 'Acer (plant)';\n            // }\n            if (!this.searchTerm) {\n                return;\n            }\n            console.log('Searching Wikipedia for: ' + this.searchTerm);\n            \n            axios.get(imageapi + encodeURIComponent(this.searchTerm)).then(response => {\n                const pages = response.data.query.pages;\n                const page = pages[Object.keys(pages)[0]];\n                if (page && page.thumbnail && page.thumbnail.source) {\n                    // TODO: if there is no high res image available, then the call to thumb/600px- fails. Not easy to handle\n                    // without making the failing call and then trying again.\n                    const thumb = page.thumbnail.source.replace(/\\/\\d\\dpx-/, window.devicePixelRatio > 1 ? '/600px-' : '/300px-');\n                    this.imageUrl = thumb;\n                }\n            });\n            \n            axios.get(textapi + encodeURIComponent(this.searchTerm)).then(response => {\n                this.loading = false;\n                const pages = response.data.query.pages;\n                const page = pages[Object.keys(pages)[0]];\n\n                if (page && page.extract) {\n                    this.title = page.title;\n                    this.text = page.extract\n                } else {\n                    this.imageUrl = undefined;\n                    this.text = undefined;\n                }\n            });\n        }\n    },\n    watch: {\n        searchTerm() {\n            this.doSearch();\n        }\n            \n    }\n}\n\n\n</script>\n\n<style>\n#Wikipedia h2 { font-size: 16px; margin-bottom:0;padding:0;}\n#Wikipedia p { margin-top:0; }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Wikipedia.vue?vue&type=template&id=4faa7965&lang=pug&\"\nimport script from \"./Wikipedia.vue?vue&type=script&lang=js&\"\nexport * from \"./Wikipedia.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Wikipedia.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Wikipedia.vue\"\nexport default component.exports","<template lang=\"pug\">\ndiv\n    .panel(v-if=\"feature\")\n        //- img.image(v-if=\"imageUrl\" :src=\"imageUrl\")\n        div.bg-green\n            h2.i.lancelot.f3.pa2.mv0.bg-green {{ p.common || p.scientific || p.description }}\n            i.close-btn.pa2.mt1.dark-green.pointer.fw6.fas.fa-times(@click=\"close\" style=\"position:absolute;right:0;top:0; cursor:pointer;\")\n        div.cl(v-if=\"p.class\").f7.pa2.i\n            | {{ p.class }} \n            span.light-green > \n            | {{ p.subclass }} \n            span.light-green > \n            | {{ p.family }}\n            \n        table#FeatureInfo(v-if=\"feature\").bg-white.helvetica.ma1\n            tr(v-if=\"p.scientific\")\n                th Scientific name\n                td {{ p.scientific }}\n            template(v-if=\"showExtra\")\n                tr(v-if=\"p.genus\")\n                    th Genus/species\n                    td {{ p.genus }} {{ p.species }}\n                //- tr(v-if=\"p.species\")\n                //-     th Species\n                //-     td {{ p.species }}\n            tr(v-if=\"p.common\")\n                th Common name\n                td {{ p.common }}\n            tr(v-if=\"!p.common && !p.scientific\")\n                //- th Scientific name\n                td No species information available.\n            tr(v-if=\"p.description\")\n                th Description\n                td {{ p.description }}\n            tr(v-if=\"p.variety\")\n                th Variety\n                td {{ p.variety }}\n            tr(v-if=\"Number.isFinite(Number(p.dbh))\")\n                th Diameter\n                td {{ Math.round(p.dbh) }} \n                    span.detail cm.\n            tr(v-if=\"p.height\")\n                th Height\n                td {{ p.height }} \n                    span.detail m.\n            tr(v-if=\"p.planted\")\n                th Planted\n                td {{ p.planted }}\n            tr(v-if=\"p.maturity\")\n                th Maturity\n                td {{ p.maturity }}\n            //- tr(v-if=\"p.\")\n            //-     th \n            //-     td {{ p }}\n            tr(v-if=\"p.species_count\")\n                th Count\n                td {{ p.species_count.toLocaleString() }} \n                    span.detail similar trees\n            tr(v-if=\"p.ref\")\n                th ID\n                td {{ `#${p.ref}` }}\n            template(v-if=\"showExtra\")\n                tr(v-for=\"(value, prop) in p\")\n                \n                    template(v-if=\"ignoreProps.indexOf(prop) === -1\")\n                        th.f6.dark-green {{ prop }}\n                        td.f6 {{ value }}\n        p.f7.gray.mh2.i.mv0 Source: \n            a(:href=\"sourceUrl\" target=\"_blank\") {{ sourceName }}\n        p.f7.mh2.gray.i.mv0 See on \n            a(:href=\"`https://www.google.com/maps/@?api=1&map_action=pano&viewpoint=${feature.geometry.coordinates.slice().reverse()}`\" target=\"_blank\") StreetView\n            | .\n        Wikipedia(:searchTerm=\"p.genus + (p.species ? ' ' + p.species : '')\")\n    //- .panel.pa3(v-if=\"!feature && (firstTime)\") \n    //-     b.dark-green(v-if=\"firstTime\") Click on a tree for information!\n    .panel.pa2(v-if=\"!feature && about\")\n        i.close-btn.pa2.mt1.dark-green.pointer.fw6.fas.fa-times(@click=\"close\" style=\"position:absolute;right:0;top:0; cursor:pointer;\")\n        h3 About \n            span.lancelot.dark-green.f3 OpenTrees.org\n        p \n            span.lancelot.dark-green.f4 OpenTrees.org \n            | is the world's largest database of municipal street and park trees, produced by harvesting open data from dozens of different sources.\n            .i.b.dark-green Click any tree to learn about it.\n        h4 Why does this data exist?\n        p Local governments collect tree data for several reasons:\n        ul\n            li To guide their choices of what to plant next.\n            li To manage risk of branches falling.\n            li To manage pruning, watering and inspection schedules.\n            li To plan ahead, so lots of old trees don't die at the same time.\n        h4 There's a tree missing!\n        p Every tree database is incomplete and out of date. A source might be missing a tree because:\n            ul\n                li It only covers \"significant trees\".\n                li It only includes trees directly managed by the government body, not private properties, schools etc.\n                li It only covers parks, or streets.\n                li The tree was surveyed once, a long time ago, and the data isn't maintained.\n        h4 Why are all the trees showing as grey in some areas?\n        p Some of the data sources don't include species information. This can happen when either it isn't collected or isn't included in the data export for some reason.\n        h4 Family information is incomplete\n        p The source I'm using only covers Australian species. I'll need to do something about that.\n        h4 How do I get my city on \n            span.lancelot.dark-green.f4 OpenTrees.org\n            | ?\n        ol\n            li Find out if your city even has a tree database.\n            li Find out if it is published as open data. If not, try to convince them to do so.\n            li <a href=\"https://github.com/stevage/opentrees/issues\">Raise an issue</a> to include it \n        h4 Is there a way for me to help maintain the tree data in my area?\n        p A couple of the tree databases appear to be crowdsourced, such as <a href=\"https://www.portlandoregon.gov/parks/53181\">Portland, Oregon</a>. Most are maintained either directly by government employees, \n        | or outsourced to a specialist arborist company. However it would be possible to start a project on <a href=\"https://www.inaturalist.org/\">inaturalist.org</a> and import that data, for instance.\n        h4 How did you build it?\n        p <a href=\"https://stevebennett.me/2015/04/07/opentrees-org-how-to-aggregate-373000-trees-from-9-open-data-sources/\">In 2015</a>, it used Postgres and TileMill.\n        p <a href=\"https://stevebennett.me/2018/05/15/you-might-not-need-postgis-streamlined-vector-tile-processing-for-big-map-visualisations/\">In 2018</a>, I rewrote it using Mapbox-GL-JS and no database. \n        p In 2020, I rewrote it again using VueJS. (No blog post yet!)\n        h4 Where is the source code?\n        p On <a href=\"https://github.com/stevage/opentrees\">Github</a>.\n        h4 Who made this?\n        p Me, Steve Bennett, a freelance web developer, data visualisation and Mapbox expert based in Melbourne, Australia. \n         | You can see the rest of my portfolio at <a href=\"https://hire.stevebennett.me\">hire.stevebennett.me</a>.\n</template>\n\n<script>\nimport Wikipedia from './Wikipedia';\n// import sources from '../sources';\nimport sources from '../sources-out.json';\nimport { EventBus } from '../EventBus';\nexport default {\n    name: \"FeatureInfo\",\n    data: () => ({\n        feature: undefined,\n        firstTime: true,\n        about: true,\n        ignoreProps: ['id','Longitude','Latitude', 'image_url']\n    }),\n    components: { Wikipedia },\n    computed: {\n        p() {\n            return this.feature && this.feature.properties || {};\n        },\n        imageUrl() {\n            return this.p && this.p.image_url\n        },\n        showExtra() {\n            return window.location.hash.match(/debug/);\n        },\n        sourceUrl() {\n            console.log(sources);\n            const s = sources.find(s => s.id === this.p.source);\n            return s ? s.info || s.download : '#';\n            \n        },\n        sourceName() {\n            console.log(sources);\n            const s = sources.find(s => s.id === this.p.source);\n            return s ? (s.long || s.short || s.id) : 'unknown';\n        }\n        \n    },\n    created() {\n        window.app.FeatureInfo = this;\n        EventBus.$on('about', () => {\n            this.feature = null;\n            this.about = true;\n        });\n        EventBus.$on('unselect-tree', () => {\n            this.feature = null;\n            this.about = false;\n        });\n    },\n    watch: {\n        feature(newValue, oldValue) {\n            if (newValue) {\n                this.firstTime = false;\n            }\n            EventBus.$emit('resize');\n\n            \n        }\n    },\n    methods: {\n        close() {\n            this.feature=null;\n            this.about = false;\n        }\n    },\n}\n</script>\n\n<style scoped>\n#FeatureInfo th {\n    text-align:  right;\n}\n\n.image {\n    width: 100%;\n}\n</style>\n<style>\nth {\n    color: hsl(100, 29.4%, 30%)\n}\ntd {\n    padding-left:8px;\n}\n.detail {\n    /* color:#444; */\n    font-weight:200;\n    font-size:75%;\n}\n\n.panel {\n     width:300px; \n     position:relative;\n}\n\n/* h2, h3, h4 {\n    font-family: Lancelot,Arial,Open Sans;\n} */\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FeatureInfo.vue?vue&type=template&id=60b99b61&scoped=true&lang=pug&\"\nimport script from \"./FeatureInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./FeatureInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FeatureInfo.vue?vue&type=style&index=0&id=60b99b61&scoped=true&lang=css&\"\nimport style1 from \"./FeatureInfo.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"60b99b61\",\n  null\n  \n)\n\ncomponent.options.__file = \"FeatureInfo.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bg-white pa1\",attrs:{\"id\":\"Mode\"}},[_c('div',{staticClass:\"only-mobile pa1 pr3 ba b--light-gray\",attrs:{\"id\":\"dropdown\"},on:{\"click\":function($event){_vm.open = !_vm.open}}},[_vm._v(_vm._s(_vm.selectedModeCaption)),_c('i',{staticClass:\"absolute right-0 mr1 fas fa-caret-down\"})]),_c('div',{class:{ 'not-mobile': !_vm.open},attrs:{\"id\":\"options\"}},_vm._l((_vm.modes),function(ref){\nvar mode = ref[0];\nvar caption = ref[1];\nreturn _c('div',{on:{\"click\":function($event){_vm.open = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedMode),expression:\"selectedMode\"}],staticClass:\"ma1 dib\",attrs:{\"id\":\"none\",\"id\":mode,\"type\":\"radio\"},domProps:{\"value\":mode,\"checked\":_vm._q(_vm.selectedMode,mode)},on:{\"change\":function($event){_vm.selectedMode=mode}}}),_c('label',{staticClass:\"pa1-ns dib\",attrs:{\"for\":mode}},[_vm._v(_vm._s(caption))])])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Mode.bg-white.pa1\n    #dropdown.only-mobile.pa1.pr3.ba.b--light-gray(@click=\"open = !open\") {{ selectedModeCaption }}\n        //- i.ml2.fas.fa-caret-down\n        i.absolute.right-0.mr1.fas.fa-caret-down\n    #options(:class=\"{ 'not-mobile': !open}\")\n        div(v-for=\"([mode, caption]) in modes\" @click=\"open = false\")\n            input.ma1.dib#none(:id=\"mode\" type=\"radio\" :value=\"mode\" v-model=\"selectedMode\") \n            label.pa1-ns.dib(:for=\"mode\") {{ caption }}\n\n</template>\n\n<script>\nimport { EventBus } from '../EventBus'\nexport default {\n    name: \"Mode\",\n    data: () => ({\n        selectedMode: 'none',\n        \n        open: false,\n        modes: [\n                ['none', 'No vis.'],\n                ['species', 'Botanical group'],\n                ['family', 'Family'],\n                ['rarity', 'Rarity'],\n                ['local', 'Species in view'],\n                ['trunk', 'Trunk size'],\n                ['health', 'Health'],\n                ['edible','Edible'],\n                ['label', 'Label'],\n                ['harm', 'Harm'],\n\n        ]\n    }),\n    created() {\n        window.Mode = this;\n    },\n    mounted () {\n        // EventBus.$emit('vis-mode', this.selectedMode);\n    },\n    computed: {\n        selectedModeCaption() {\n            return this.modes.find(([mode, caption]) => mode === this.selectedMode)[1];\n        }\n    },\n    watch: {\n        selectedMode() {\n            EventBus.$emit('vis-mode', this.selectedMode);\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Mode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Mode.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Mode.vue?vue&type=template&id=174b2c54&scoped=true&lang=pug&\"\nimport script from \"./Mode.vue?vue&type=script&lang=js&\"\nexport * from \"./Mode.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"174b2c54\",\n  null\n  \n)\n\ncomponent.options.__file = \"Mode.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bg-white\",attrs:{\"id\":\"Legend\"}},[(_vm.zoomWarning)?_c('div',{staticClass:\"red\"},[_vm._v(_vm._s(_vm.zoomWarning))]):_vm._e(),(!_vm.zoomWarning && _vm.vals.length)?_c('div',{staticClass:\"pa2\"},[(_vm.mode === 'local')?_c('div',[_c('div',{staticClass:\"f7 i mt0 mb2-ns\"},[_vm._v(\"The most common species in the current map view\")])]):_vm._e(),_vm._l((_vm.vals),function(ref){\nvar title = ref[0];\nvar color = ref[1];\nreturn _c('div',{staticClass:\"mb2-ns\"},[_c('div',{staticClass:\"pill br4 b--gray dib ba w1 h1 mr0 v-top\",style:({ background: color})}),_c('span',{staticClass:\"f6 pl3 dib\",domProps:{\"innerHTML\":_vm._s(title)}})])})],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Legend.bg-white\n    .red(v-if=\"zoomWarning\") {{ zoomWarning }}\n    div.pa2(v-if=\"!zoomWarning && vals.length\")\n        div(v-if=\"mode === 'local'\")\n            .f7.i.mt0.mb2-ns The most common species in the current map view\n        div.mb2-ns(v-for=\"([title, color]) in vals\")\n            .pill.br4.b--gray.dib.ba.w1.h1.mr0.v-top(:style=\"{ background: color}\")\n            span.f6.pl3.dib(v-html=\"title\")\n</template>\n\n<script>\nimport { EventBus } from '../EventBus';\nexport default {\n    name: \"Legend\",\n    data: () => ({\n        vals: [],\n        zoom: undefined,\n        mode: undefined\n    }),\n    computed: {\n        zoomWarning() {\n            const minZooms = {\n                family: 10,\n                rarity: 10,\n                local: 12,\n                trunk: 13,\n                label: 16,\n                health:10,\n                edible: 10\n            }\n\n            if (this.zoom <= (minZooms[this.mode] || 1)) {\n                return 'Zoom in for this mode.'\n            }\n            return '';\n            \n        },\n        \n    },\n    created() {\n        window.Legend = this;\n        EventBus.$on('update-legend', vals => {\n            this.vals = vals\n        });\n        EventBus.$on('zoom-change', zoom => this.zoom = zoom);\n        EventBus.$on('vis-mode', mode => this.mode = mode);\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Legend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Legend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Legend.vue?vue&type=template&id=502adf08&scoped=true&lang=pug&\"\nimport script from \"./Legend.vue?vue&type=script&lang=js&\"\nexport * from \"./Legend.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"502adf08\",\n  null\n  \n)\n\ncomponent.options.__file = \"Legend.vue\"\nexport default component.exports","<template lang=\"pug\">\n    #app.flex.flex-column.vh-100.avenir\n        #top.bb.b--gray.bg-green.haoeu3-ns\n            h1.f1-ns.f5.ma2-ns.lancelot.dib.fl \n                img.w2-ns.w1.dib.fl.ma2(src=\"cubetree-logo.png\")\n                span.dark-green OpenTrees.org\n                span.dark-gray.ml2.ml4-ns.f3-ns {{ stats.openTrees.toLocaleString()}} open data trees from {{ stats.sources }} sources in {{ stats.countries.length }} countries.\n        #middle.flex.flex-auto\n            #sidebar.br.b--gray.overflow-y-scroll.overflow-x-hidden\n                FeatureInfo\n            #map-container.relative.flex-auto\n                Map\n                #overlay.absolute.ba.b--gray.shadow-3.ml2-ns.mt2-ns.mw5.mw-none-ns.overflow-y-scroll\n                    Mode\n                    Legend\n                    \n        #bottom.bt.b--light-gray.flex-none.pa1.shadow-3\n            | Created by <a href=\"https://twitter.com/stevage1/\">Steve Bennett</a>. \n            a(href=\"#\" @click=\"about\") About OpenTrees.org\n            | .\n\n</template>\n\n<script>\nimport Map from './components/Map.vue'\nimport FeatureInfo from './components/FeatureInfo.vue'\nimport Mode from './components/Mode.vue';\nimport Legend from './components/Legend.vue';\nimport { EventBus } from './EventBus';\nimport stats from './stats.json';\nwindow.app = { }\nexport default {\n    name: 'app',\n    data() {\n        return {\n            stats\n        }\n    },\n    components: {\n      Map,\n      FeatureInfo,\n      Mode,\n      Legend,\n    },\n    created() {\n        window.app.App = this;\n    },\n    methods: {\n        about() {\n            EventBus.$emit('about');\n            \n        }\n    },\n}\n\nrequire('tachyons/css/tachyons.min.css');\n</script>\n\n<style>\nhtml, body {\n  height: 100vh;\n  width: 100%;\n  margin:0;\n  padding:0;\n}\n#sidebar {\n    /* min-width:200px; */\n}\n@media screen and (max-width:768px) {\n    .not-mobile {\n        display: none;\n    }\n    #overlay {\n        max-height: 12rem;\n    }\n}\n@media screen and (min-width:768px) {\n    .only-mobile {\n        display: none;\n    }\n    #overlay {\n        max-height: calc(100vh - 8rem - 20px)\n    }\n}\n\n.bg-green {\n    background: hsl(98.6, 30.4%, 82%) !important;\n}\n\n.dark-green {\n    color: hsl(100, 29.4%, 30%) !important;\n}\n\n.light-green {\n    color: hsl(100, 29.4%, 50%) !important;\n}\n\n.bg-light-green {\n    background: hsl(100, 29.4%, 90%) !important;\n}\n\n.lancelot {\n    font-family:lancelot,sans-serif;\n}\n\n    \n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--11-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--11-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=340953e0&lang=pug&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=0&id=60b99b61&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=0&id=60b99b61&scoped=true&lang=css&\""],"sourceRoot":""}